name: 'GAWG Notify action'
description: 'This action sends a notification containing workflow info to the desired channel.'
author: Álvaro García Pizarro
branding:
  icon: 'inbox'
  color: 'gray-dark'

inputs:
  messaging_app:
    type: string
    description: 'Messaging app to send the notification to.'
    required: true
  artifact_name:
    type: string
    description: 'Name of the artifact generated by the build.'
    required: true
  technology:
    type: string
    description: 'Technology used in the project.'
    required: true
  docker:
    type: boolean
    description: 'Whether Docker is enabled or not.'
    required: true
  self-hosted-runner:
    type: boolean
    description: 'Whether self-hosted runners are used or not.'
    required: true
  deployment:
    type: string
    description: 'Deployment type.'
    required: true
  SLACK_CHANNEL:
    type: string
    description: 'Slack channel to send the notification to.'
    required: false
  SLACK_TOKEN:
    type: string
    description: 'Slack token to authenticate the request.'
    required: false
  

runs:
  using: "composite"
  steps:
    - name: Generate Workflow Summary Report
      shell: bash
      run: |
        echo ""
        echo "====================================== WORKFLOW SUMMARY ======================================="
        echo "## Workflow information" >> $GITHUB_STEP_SUMMARY
        echo "## Workflow information" >> summary.txt
        echo "🔧 Technology: ${{ inputs.technology }} | Docker enabled: ${{ inputs.docker }} | Self-hosted runners: ${{ inputs.self-hosted-runner }} | Deployment type: ${{ inputs.deployment }} | Artifact name: ${{ inputs.artifact_name }}."
        echo "🔧 Technology: ${{ inputs.technology }} | Docker enabled: ${{ inputs.docker }} | Self-hosted runners: ${{ inputs.self-hosted-runner }} | Deployment type: ${{ inputs.deployment }} | Artifact name: ${{ inputs.artifact_name }}." >> summary.txt
        echo "🔧 Technology: ${{ inputs.technology }} | Docker enabled: ${{ inputs.docker }} | Self-hosted runners: ${{ inputs.self-hosted-runner }} | Deployment type: ${{ inputs.deployment }} | Artifact name: ${{ inputs.artifact_name }}." >> $GITHUB_STEP_SUMMARY
        echo "👤 Workflow (${{ github.workflow }}) triggered on ${{ github.event_name }} by ${{ github.actor }} on ${{ github.repository }} repository (${{ github.ref }} branch)."
        echo "👤 Workflow (${{ github.workflow }}) triggered on ${{ github.event_name }} by ${{ github.actor }} on ${{ github.repository }} repository (${{ github.ref }} branch)." >> summary.txt
        echo "👤 Workflow (${{ github.workflow }}) triggered on ${{ github.event_name }} by ${{ github.actor }} on ${{ github.repository }} repository (${{ github.ref }} branch)." >> $GITHUB_STEP_SUMMARY
        echo "🆔 Workflow run ID: ${{ github.run_id }}"
        echo "🆔 Workflow run ID: ${{ github.run_id }}" >> summary.txt
        echo "🆔 Workflow run ID: ${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
        echo "🕒 Execution time: $(date)"
        echo "🕒 Execution time: $(date)" >> summary.txt
        echo "🕒 Execution time: $(date)" >> $GITHUB_STEP_SUMMARY
        echo "🔗 Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        echo "🔗 Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> summary.txt
        echo "🔗 Run URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY
        echo "==============================================================================================="

    - name: No notification needed
      if: ${{ inputs.messaging_app == 'none' }}
      shell: bash
      run: |
        echo "No notification needed. Skipping this job. Just showing the summary."  

    - name: Email notification
      if: ${{ inputs.messaging_app == 'email' }}
      shell: bash
      run: |
        echo "Sending email notification to the team."

    - name: Slack notification
      if: ${{ inputs.messaging_app == 'slack' }}
      shell: bash
      run: |
        echo "Sending Slack notification to the team."

        if [ -z "${{ inputs.SLACK_CHANNELL }}" ]; then
          echo "Error: SLACK_CHANNEL is not set. To obtain a channel ID, right-click on the channel name and select 'Copy link'. The channel ID is the last part of the URL."
          echo "Error: SLACK_CHANNEL is not set. To obtain a channel ID, right-click on the channel name and select 'Copy link'. The channel ID is the last part of the URL." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

        if [ -z "${{ inputs.SLACK_TOKEN }}" ]; then
          echo "Error: SLACK_TOKEN is not set. To obtain a token, create a new Slack app, install it in a channel, and get the Bot user OAuth Token from the Install App section."
          echo "Error: SLACK_TOKEN is not set. To obtain a token, create a new Slack app, install it in a channel, and get the Bot user OAuth Token from the Install App section." >> $GITHUB_STEP_SUMMARY
          exit 1
        fi

        echo "Sending Slack notification to the team."
        export message=$(cat summary.txt)

        curl -H "Content-type: application/json" \
        --data "{\"channel\":\"${{ inputs.SLACK_CHANNEL }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"$message\"}}]}" \
        -H "Authorization: Bearer ${{ inputs.SLACK_TOKEN }}" \
        -X POST https://slack.com/api/chat.postMessage

    - name: Microsoft Teams notification
      if: ${{ inputs.messaging_app == 'msteams' }}
      shell: bash
      run: |
        echo "Sending Microsoft Teams notification to the team."

    - name: Discord notification
      if: ${{ inputs.messaging_app == 'discord' }}
      shell: bash
      run: |
        echo "Sending Discord notification to the team."

    - name: Telegram notification
      if: ${{ inputs.messaging_app == 'telegram' }}
      shell: bash
      run: |
        echo "Sending Telegram notification to the team."